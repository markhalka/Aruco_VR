package com.example.android.udpa1;

import android.Manifest;
import android.app.Activity;
import android.content.Context;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.hardware.camera2.CameraManager;
import android.media.Image;
import android.os.Bundle;
import android.os.Debug;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.nio.ByteBuffer;
import java.util.Scanner;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.lang.reflect.Method;
public class MainActivity extends AppCompatActivity implements SensorEventListener {
    SensorManager sensorManager;
    Sensor accelerometer;
    Sensor gyroscope;
    String x,y,z,s,si;
    public static boolean bRun = false;
    //public static Image image;
    @Override
    protected void onCreate(Bundle savedInstanceState)  {

        ActivityCompat.requestPermissions(MainActivity.this,
                new String[]{Manifest.permission.CAMERA},
                1);

        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
                != PackageManager.PERMISSION_GRANTED) {
            Toast.makeText(getApplicationContext(), "no perm", Toast.LENGTH_SHORT).show();
            // Permission is not granted
        }


        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        //si = "10.216.6.156";
        CameraManager cam = (CameraManager) getSystemService(Context.CAMERA_SERVICE);
        final EditText txt;
        txt = (EditText) findViewById(R.id.txt);
        bRun = true;
        //new picB(cam).execute();
        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
        accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_LINEAR_ACCELERATION);
        sensorManager.registerListener(this, accelerometer, sensorManager.SENSOR_DELAY_GAME);
        gyroscope = sensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE);
        sensorManager.registerListener(this, gyroscope, sensorManager.SENSOR_DELAY_GAME);
        FloatingActionButton fab = findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
                //udpConnect = new Thread(new ClientSendAndListen()).start();
                si=" ";

            }
        });

        final android.widget.TextView btnMain;
        btnMain = findViewById(R.id.bMain);
        btnMain.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) /*throws Exception*/  {
                si = ""+txt.getText();

                //Image image = reader.acquireLatestImage();
                //ByteBuffer buffer = image.getPlanes()[0].getBuffer();
                //byte[] bytes = new byte[buffer.capacity()];
                //buffer.get(bytes);
                //Bitmap bitmapImage = BitmapFactory.decodeByteArray(bytes, 0, bytes.length, null);
                //ImageView img = (ImageView) findViewById(R.id.iMain);
                //img.setImageBitmap(bitmapImage);

                Toast.makeText(getApplicationContext(), "Toast "+si, Toast.LENGTH_SHORT).show();
            }
        });
    }

    @Override
    public void onSensorChanged(SensorEvent event) {
        String sensorName = event.sensor.getName();
        x=""+event.values[0];
        y=""+event.values[1];
        z=""+event.values[2];
        s=sensorName+" "+x+" "+y+" "+z;
        //Log.e("TA",sensorName+" "+x+" "+y+"   "+z);
        if(si!=null) {
            try {            //Toast.makeText(getApplicationContext(), "Toastyy", Toast.LENGTH_SHORT).show();
                //if(si!="") {
                //si = "10.216.6.156";
               // Log.e("TAG", si);
                new CFS(s, si).execute();
                //}
            } catch (Exception e) {
                Log.e("TAG", "EXCEPTION CAUGHT WHILE EXECUTING DATABASE TRANSACTIONs");
                e.printStackTrace();
            }
        }
    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {
    //not used
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }




}
